global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon
        #maxconn 500000

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

#-------------default for each section------------#

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http
        maxconn 500000

#------------------status page--------------------#

        listen         stats  
        bind           <IP haproxy>:8080
        stats enable
        stats refresh 30s
        stats show-node
        stats auth root:<your-pass>
        stats uri  /status

#------------------front conf---------------------#

frontend site1.com
mode tcp
bind  *:443 ssl crt /etc/ssl/certs/site1.pem 
bind  *:80

#default_backend Nginx1

use_backend %[req.hdr(host),lower,map_dom(/etc/haproxy/maps/hosts.map,be_default)]

#http-request redirect code 301 location http://testha.videocake.ir%[capture.req.uri] if { hdr_reg(host) -i 78.39.152.24 } # redirect IP to https

#http-request redirect scheme https unless { ssl_fc }  

#redirect http to https

#frontend site2.net
#bind  *:443 ssl crt /etc/ssl/certs/site2.pem
#bind  *:80
#default_backend Nginx_Web_Cluster
#http-request redirect scheme https unless { ssl_fc }
#redirect http to https

#-------------------back conf ----------------#

backend sites-back
balance roundrobin
cookie SERVER insert indirect nocache
#balance leastconn
#balance static-rr
#balance first

#option httpchk HEAD /
server  web-nginx1  <IP 1>:80  check cookie web1
server  web-nginx2  <IP 2>:80  check cookie web2


